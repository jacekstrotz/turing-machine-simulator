/*  Project 2: A Turing Machine Simulator
    Author: Jacek Strotz
    Date: 4/10/23

    Project URL: https://copper.mountunion.edu/cs/csc/CSC450/Spring2023/project/TM_multi_input_Data/TM_project.html
    Description: This program defines a language to write conceptual
    Turing machines. The input is in the following format:
    a b c d e f g (line 1 - list of states separated by one space)
    0 1 2 (line 2 - input alphabet)
    0 1 2 _ (line 3 - tape alphabet including blank character _)
    a (line 4 - one start state)
    g (line 5 - one accept state)
    f (line 6 - one reject state)
    a 0 a 1 R (line 7 - delta function - in the form STATE CURRENT_CHAR NEXT_STATE CHAR_TO_WRITE DIRECTION)
    a 1 a 0 L (line 8 - example 2 of delta function. Delta function continues for the rest of the definition)

    The program comes with many predefined programs. One of them performs binary 
    addition, and can perform on any two binary integers (regardless of size).
    
 */

package main;

import com.formdev.flatlaf.FlatDarkLaf;
import java.io.File;
import java.net.URL;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultCaret;

public class MainFrame extends javax.swing.JFrame {

    TMThread th;
    TM t;
    public MainFrame() {
        FlatDarkLaf.setup();
        initComponents();
        
        th = new TMThread(outputArea, runButton);
        
        DefaultCaret caret = (DefaultCaret)outputArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE); 
        
        inputComboBox.removeAllItems();
        File[] listOfFiles = (new File("input/")).listFiles();
        
        // scan dir for files, add them to combobox
        Arrays.sort(listOfFiles);
        for (File file : listOfFiles) 
            if (file.getName().contains("input")) 
                inputComboBox.addItem(file.getName()); // ignore random files, only input
        
        tmComboBox.removeAllItems();
        listOfFiles = (new File("data/")).listFiles();
        
        Arrays.sort(listOfFiles);
        for (File file : listOfFiles) 
            if (file.getName().contains("tm")) 
                tmComboBox.addItem(file.getName()); // ignore random files, only TM
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        tmComboBox = new javax.swing.JComboBox<>();
        inputComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tmTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        validityButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        singleStepButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        outputComboBox = new javax.swing.JComboBox<>();
        speedSlider = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Project2");

        jLabel1.setFont(new java.awt.Font(".SF NS Text", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Turing Machine Simulator");

        tmComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tmComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmComboBoxActionPerformed(evt);
            }
        });

        inputComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputComboBoxActionPerformed(evt);
            }
        });

        tmTextArea.setColumns(20);
        tmTextArea.setRows(5);
        jScrollPane1.setViewportView(tmTextArea);

        inputTextArea.setColumns(20);
        inputTextArea.setRows(5);
        jScrollPane2.setViewportView(inputTextArea);

        validityButton.setText("Check Validity");
        validityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validityButtonActionPerformed(evt);
            }
        });

        outputArea.setColumns(20);
        outputArea.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        outputArea.setRows(5);
        jScrollPane3.setViewportView(outputArea);

        singleStepButton.setText("Single Step");
        singleStepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleStepButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        outputComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Details and Results", "Results", "Accepted strings" }));
        outputComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputComboBoxActionPerformed(evt);
            }
        });

        speedSlider.setMaximum(999);
        speedSlider.setMinimum(500);
        speedSlider.setValue(800);
        speedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                speedSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(runButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(outputComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 168, Short.MAX_VALUE)
                            .addComponent(speedSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(singleStepButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(validityButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tmComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(inputComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(singleStepButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outputComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void inputComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputComboBoxActionPerformed
        if (inputComboBox.getSelectedIndex() == -1) return;
        In in;
        // check for web url
        if (!((String)inputComboBox.getSelectedItem())
                .matches("(http)(s)?(:\\/\\/)(.)+")) { 
            try {
                in = new In("input/" + inputComboBox.getSelectedItem());                        
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error trying to open " 
                        + inputComboBox.getSelectedItem() + "\n", "Alert", 
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            try {
                in = new In(new URL((String)inputComboBox.getSelectedItem()));
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Failed to read from " 
                        + inputComboBox.getSelectedItem() + "\n", "Alert", 
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if (in.exists())
            inputTextArea.setText(in.readAll().trim());
    }//GEN-LAST:event_inputComboBoxActionPerformed

    private void tmComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmComboBoxActionPerformed
        if (tmComboBox.getSelectedIndex() == -1) return;
        
        In in;
        // check for web url
        if (!((String)tmComboBox.getSelectedItem())
                .matches("(http)(s)?(:\\/\\/)(.)+")) { 
            try {
                in = new In("data/" + tmComboBox.getSelectedItem());                        
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error trying to open " 
                        + tmComboBox.getSelectedItem() + "\n", "Alert", 
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            try {
                in = new In(new URL((String)tmComboBox.getSelectedItem()));
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Failed to read from " 
                        + tmComboBox.getSelectedItem() + "\n", "Alert", 
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if (in.exists())
            tmTextArea.setText(in.readAll().trim());
    }//GEN-LAST:event_tmComboBoxActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        if (t == null) {
            t = new TM(tmTextArea.getText());
        
            th.initialize(t, inputTextArea.getText().split("\n"));
        }
        th.setPause(!th.getPause());
        runButton.setText(th.getPause() ? "Run" : "Pause");
    }//GEN-LAST:event_runButtonActionPerformed

    private void singleStepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleStepButtonActionPerformed
        if (t == null) {
            t = new TM(tmTextArea.getText());
        
            th.initialize(t, inputTextArea.getText().split("\n"));
        }
        th.setPause(false);
        runButton.setText("Pause");
        th.once = true;
    }//GEN-LAST:event_singleStepButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        t = new TM(tmTextArea.getText());
        th.initialize(t, inputTextArea.getText().split("\n"));
        th.setPause(true);
        
        outputArea.setText("Turing Machine reset\n\n");
        runButton.setText("Run");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void speedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_speedSliderStateChanged
        th.setSpeed(speedSlider.getValue());
    }//GEN-LAST:event_speedSliderStateChanged

    private void outputComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputComboBoxActionPerformed
        th.setConfig(outputComboBox.getSelectedIndex());
    }//GEN-LAST:event_outputComboBoxActionPerformed

    private void validityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validityButtonActionPerformed
        t = new TM(tmTextArea.getText());
        String res = t.validate(tmTextArea.getText());
        if (res.isEmpty())
            outputArea.setText("Turing Machine is valid.\n");
        else 
            outputArea.setText("Turing Machine is invalid.\n" +
                    res + "\n");
        
        String[] lines = inputTextArea.getText().split("\n");
        boolean v = true;
        for (String line : lines) {
            res = t.checkInput(line);
            if (!res.isEmpty()) {
                outputArea.append(res + "\n");
                v = false;
            }
        }
        if (v)
            outputArea.append("Input is valid.\n");
            
    }//GEN-LAST:event_validityButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel( new FlatDarkLaf() );
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> inputComboBox;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JComboBox<String> outputComboBox;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton runButton;
    private javax.swing.JButton singleStepButton;
    private javax.swing.JSlider speedSlider;
    private javax.swing.JComboBox<String> tmComboBox;
    private javax.swing.JTextArea tmTextArea;
    private javax.swing.JButton validityButton;
    // End of variables declaration//GEN-END:variables
}
